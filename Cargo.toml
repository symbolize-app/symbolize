[workspace]
members = [
  "dev-cargo-build",
  "dev-sim",
  "dev-watchman-client",
  "lib-hex-rs",
  "svc-gateway-host-run",
  "svc-search-host-read",
]
resolver = "2"

[workspace.package]
version = "0.1.0"
edition = "2021"
license = "MIT OR Apache-2.0"

[workspace.dependencies]
anyhow = { version = "1.0.75", features = ["std"] }
backon = { version = "1.2.0", features = [] }
bytes = { version = "1.5.0", features = [] }
clap = { version = "4.4.12", features = ["color", "derive", "error-context", "help", "std", "suggestions", "usage"] }
crossbeam = { version = "0.8.4", features = ["crossbeam-queue", "std"] }
dashmap = { version = "6.0.1", features = [] }
form_urlencoded = { version = "1.2.1", features = [] }
futures = { version = "0.3.30", features = [] }
http = { version = "1.0.0", features = [] }
http-body = { version = "1.0.0", features = [] }
http-body-util = { version = "0.1.2", features = [] }
hyper = { version = "1.0.1", features = ["client", "http2", "server"] }
hyper-util = { version = "0.1.1", features = ["tokio"] }
symbolize-lib-hex = { version="0.1.0", path = "./lib-hex-rs" }
mime = { version = "0.3.17", features = [] }
mockall = { version = "0.12.1", features = [] }
nix = { version = "0.27.1", features = ["signal"] }
pin-project-lite = { version = "0.2.13", features = [] }
ring = { version = "0.17.7", features = [] }
rusqlite = { version = "0.30.0", features = ["bundled"] }
rustls = { version = "0.22.4", features = ["logging", "ring", "tls12"] }
rustls-pemfile = { version = "2.0.0", features = ["std"] }
rustyline-async = { version = "0.4.5", features = [] }
serde = { version = "1.0.194", features = ["derive", "std"] }
serde_json = { version = "1.0.110", features = [] }
thiserror = { version = "1.0.51", features = [] }
tokio = { version = "1.39.2", features = ["fs", "io-util", "macros", "net", "process", "rt-multi-thread", "sync"] }
tokio-rustls = { version = "0.25.0", features = ["logging", "ring", "tls12"] }
tokio-stream = { version = "0.1.14", features = ["net"] }
tokio-util = { version = "0.7.10", features = ["rt"] }
watchman_client = { version = "0.8.0", features = [] }


[workspace.lints.rust]
# Groups
future-incompatible = "warn"
let-underscore = "warn"
nonstandard-style = "warn"
refining-impl-trait = "warn"
unused = { level = "warn", priority = -1 }

# Allowed by default
absolute-paths-not-starting-with-crate = "warn"
dead-code = "warn"
deprecated-in-future = "warn"
elided-lifetimes-in-paths = "warn"
explicit-outlives-requirements = "warn"
ffi-unwind-calls = "warn"
keyword-idents = "warn"
macro-use-extern-crate = "warn"
meta-variable-misuse = "warn"
missing-abi = "warn"
missing-copy-implementations = "warn"
missing-debug-implementations = "warn"
missing-docs = "allow"
single-use-lifetimes = "warn"
trivial-casts = "warn"
trivial-numeric-casts = "warn"
unit-bindings = "warn"
unreachable-pub = "warn"
unsafe-op-in-unsafe-fn = "warn"
unsafe_code = "warn"
unused-crate-dependencies = "warn"
unused-extern-crates = "warn"
unused-import-braces = "warn"
unused-lifetimes = "warn"
unused-macro-rules = "warn"
unused-qualifications = "warn"
variant-size-differences = "warn"

[workspace.lints.clippy]
cargo = { level = "warn", priority = -1 }
multiple_crate_versions = "allow"

# Pedantic
pedantic = { level = "warn", priority = -1 }
missing_errors_doc = "allow"
missing_panics_doc = "allow"
module_name_repetitions = "allow"

# Style
style = { level = "warn", priority = -1 }
single_component_path_imports = "allow"

# Restrictions
absolute_paths = "warn"
dbg_macro = "warn"
exit = "warn"
panic_in_result_fn = "warn"
partial_pub_fields = "warn"
print_stderr = "warn"
print_stdout = "warn"
pub_without_shorthand = "warn"
self_named_module_files = "warn"
try_err = "warn"
unwrap_in_result = "warn"
