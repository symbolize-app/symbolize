version: '3'

run: when_changed

vars:
  RELEASE_OPTIONS: "--ghc-options '-O2 -g0 -Werror'"
  PACKAGES: dev-gen
  FIND_FILES: $(fd -g '*.hs' $(fd -d 1 -g '{app,src,test}' {{.PACKAGES}}))

tasks:
  build:debug:
    aliases:
      - build
      - b
    cmd: cabal build all --builddir=build/dist-newstyle-debug --enable-tests

  build:debug:watch:
    aliases:
      - build:watch
      - bw
    cmd:
      task: :watchman:client
      vars:
        WATCH: true
        RESTART: false
        MODE: haskell
        COMMAND: cabal build all --builddir=build/dist-newstyle-debug --enable-tests

  build:release:
    aliases:
      - br
    cmd: cabal build all --builddir=build/dist-newstyle-release --enable-tests {{.RELEASE_OPTIONS}}

  clean:
    deps:
      - task: clean:mode
        vars:
          MODE: debug
      - task: clean:mode
        vars:
          MODE: release

  clean:mode:
    internal: true
    requires:
      vars:
        - MODE
    cmd: cabal clean --builddir build/dist-newstyle-{{.MODE}}

  execute-target:
    internal: true
    requires:
      vars:
        - WATCH
        - MODE
        - NAME
        - TARGET
        - ARGS
    vars:
      FULL_TARGET:
        sh: cabal list-bin {{.NAME}}{{.TARGET}} --builddir=build/dist-newstyle-{{.MODE}}
    cmds:
      # HACK: Reference all variables here, so Task doesn't think they're unused
      - cmd: 'true # /{{.WATCH}}/{{.MODE}}/{{.NAME}}/{{.TARGET}}/{{.ARGS}}/'
        silent: true
      - task: :watchman:client
        vars:
          WATCH: '{{.WATCH}}'
          RESTART: false
          MODE: executable
          COMMAND: '{{.FULL_TARGET}} {{.ARGS}} {{.CLI_ARGS}}'

  execute-target:run:debug:
    internal: true
    requires:
      vars:
        - NAME
    deps:
      - build:debug
    cmd:
      task: execute-target
      vars:
        WATCH: false
        MODE: debug
        NAME: '{{.NAME}}'
        TARGET: ''
        ARGS: '{{.ARGS}}'

  execute-target:run:release:
    internal: true
    requires:
      vars:
        - NAME
    deps:
      - build:release
    cmd:
      task: execute-target
      vars:
        WATCH: false
        MODE: release
        NAME: '{{.NAME}}'
        TARGET: ''
        ARGS: '{{.ARGS}}'

  execute-target:test:debug:
    internal: true
    requires:
      vars:
        - NAME
    deps:
      - build:debug
    cmd:
      task: execute-target
      vars:
        WATCH: false
        MODE: debug
        NAME: '{{.NAME}}'
        TARGET: ':tests'
        ARGS: '{{.ARGS}}'

  execute-target:test:debug:watch:
    internal: true
    requires:
      vars:
        - NAME
    deps:
      - build:debug
    cmd:
      task: execute-target
      vars:
        WATCH: true
        MODE: debug
        NAME: '{{.NAME}}'
        TARGET: ':tests'
        ARGS: '{{.ARGS}}'

  execute-target:test:release:
    internal: true
    requires:
      vars:
        - NAME
    deps:
      - build:release
    cmd:
      task: execute-target
      vars:
        WATCH: false
        MODE: release
        NAME: '{{.NAME}}'
        TARGET: ':tests'
        ARGS: '{{.ARGS}}'

  format:check:
    aliases:
      - fc
    cmd: ormolu --mode check {{.FIND_FILES}}

  format:fix:
    aliases:
      - format
      - f
    cmd: ormolu --mode inplace {{.FIND_FILES}}

  install:
    vars:
      VERSION:
        sh: grep 'any\.relude' cabal.project.freeze | sed -ne 's/.*==\([^,]*\).*/\1/p'
    cmds:
      - curl --fail --silent --show-error "https://raw.githubusercontent.com/kowainik/relude/v{{.VERSION}}/.hlint.yaml" -o dev-hlint/relude-hlint.yaml

  lint:
    aliases:
      - l
    cmd:
      task: lint:exec
      vars:
        WATCH: false

  lint:exec:
    internal: true
    requires:
      vars:
        - WATCH
    cmd:
      task: :watchman:client
      vars:
        WATCH: '{{.WATCH}}'
        RESTART: false
        MODE: haskell
        COMMAND: hlint --hint dev-hlint/relude-hlint.yaml --hint dev-hlint/base.yaml --threads {{.FIND_FILES}}

  lint:watch:
    aliases:
      - lw
    cmd:
      task: lint:exec
      vars:
        WATCH: true

  repl-target:debug:
    internal: true
    requires:
      vars:
        - NAME
    cmd: cabal repl {{.NAME}} --builddir build/dist-newstyle-debug

  test:debug:
    aliases:
      - test
      - t
    deps:
      - :dev-gen:test:debug

  test:release:
    aliases:
      - tr
    deps:
      - :dev-gen:test:release
